def hanoi(n,source,target,auxiliary):
    """
    解决汉诺塔问题的递归函数

    参数：
    n:盘子数量
    source：源柱子名称
    target：目标柱子名称
    auxiliary：辅助柱子名称
    """

    #终止条件
    if n==1:
        #只有一个盘子，直接从源柱子移动到目标柱子
        print(f"将盘子1从{source}移动到{target}")
        return

    #第一步：将n-1个盘子从源柱子移动到辅助柱子
    hanoi(n-1,source,auxiliary,target)
    #第二步：将最大的盘子从源柱子移动到辅助柱子
    print(f"将盘子{n}从{source}移动到{target}")
    #第三步将n-1个盘子从辅助柱子移动到目标柱子
    hanoi(n-1,auxiliary,target,source)


#测试三层汉诺塔
print("===汉诺塔解决方案===")
hanoi(3,'A','C','B')
'''
 在整个过程中，源柱子（source）、目标柱子（target）、
 辅助柱子（auxiliary）的角色是动态变化的.
 里面有三根柱子A,B,C，是固定的，但是它们的身份是不定的。
 因为递归解法的核心是 分解问题，
 而柱子角色的动态调整是分解问题的关键。
 所以在递归过程中，柱子的角色会互换，以适应不同的移动需求。
 例如：辅助柱子可能变成下一步的源柱子或目标柱子。
 每次递归调用都会重新定义 source、
target、auxiliary，以确保盘子能够正确移动
以 hanoi(3, 'A', 'C', 'B') 为例，从“柱子角色变化”的角度详细解析整个过程。

1. 初始调用：hanoi(3, 'A', 'C', 'B')
当前任务：将 3 个盘子从 A 移动到 C，借助 B。
柱子角色：
source = 'A'（源柱子，盘子当前所在位置）
target = 'C'（目标柱子，盘子要移动到的位置）
auxiliary = 'B'（辅助柱子，临时存放盘子）
递归分解
第一步：将上面 2 个盘子从 A 移动到 B（借助 C）。
调用 hanoi(2, 'A', 'B', 'C')。
此时柱子角色变化：
新的 source = 'A'（仍然是源柱子）
新的 target = 'B'（原来的辅助柱子变成目标柱子）
新的 auxiliary = 'C'（原来的目标柱子变成辅助柱子）
2. 子调用 1：hanoi(2, 'A', 'B', 'C')
当前任务：将 2 个盘子从 A 移动到 B，借助 C。
柱子角色：
source = 'A'
target = 'B'
auxiliary = 'C'
递归分解
第一步：将上面 1 个盘子从 A 移动到 C（借助 B）。

调用 hanoi(1, 'A', 'C', 'B')。
此时柱子角色变化：
新的 source = 'A'
新的 target = 'C'（原来的辅助柱子变成目标柱子）
新的 auxiliary = 'B'（原来的目标柱子变成辅助柱子）
执行：
因为 n=1，直接打印：将盘子1从A移动到C。
第二步：将盘子 2 从 A 移动到 B。

打印：将盘子2从A移动到B。
第三步：将 1 个盘子从 C 移动到 B（借助 A）。

调用 hanoi(1, 'C', 'B', 'A')。
此时柱子角色变化：
新的 source = 'C'（原来的辅助柱子变成源柱子）
新的 target = 'B'
新的 auxiliary = 'A'（原来的源柱子变成辅助柱子）
执行：
因为 n=1，直接打印：将盘子1从C移动到B。
3. 回到初始调用：继续执行第二步
第二步：将盘子 3 从 A 移动到 C。
打印：将盘子3从A移动到C。
4. 子调用 2：hanoi(2, 'B', 'C', 'A')
当前任务：将 2 个盘子从 B 移动到 C，借助 A。
柱子角色：
source = 'B'（原来的辅助柱子变成源柱子）
target = 'C'
auxiliary = 'A'（原来的源柱子变成辅助柱子）
递归分解
第一步：将上面 1 个盘子从 B 移动到 A（借助 C）。

调用 hanoi(1, 'B', 'A', 'C')。
执行：
打印：将盘子1从B移动到A。
第二步：将盘子 2 从 B 移动到 C。

打印：将盘子2从B移动到C。
第三步：将 1 个盘子从 A 移动到 C（借助 B）

调用 hanoi(1, 'A', 'C', 'B')。
执行：
打印：将盘子1从A移动到C。

在汉诺塔问题中，盘子通常按 从大到小 编号：

盘子1：最小的盘子（可以自由移动）。
盘子2：中等大小的盘子。
盘子3：最大的盘子（移动时需要特别小心，不能放在小盘子上面）。
 '''